service: apigateway-personas
frameworkVersion: '3.29.0'
custom:
  service: apigateway-personas
  prefix: ${self:service}-${self:provider.stage}
  pythonRequirements:
    dockerizePip: non-linux
provider:
  httpApi:
    payload: '2.0'
    id: ${file(${self:provider.stage}.yml):ID_API}
  name: aws
  runtime: python3.7
  region: ${file(${self:provider.stage}.yml):REGION}
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  stackTags:
    "Proyecto": "EDDIE"
  deploymentBucket:
    name: ${file(${self:provider.stage}.yml):DEPLOYMENT_BUCKET}
  environment:
    ID_API: ${file(${self:provider.stage}.yml):ID_API}
    ARN_TABLA_PERSONAS: ${file(${self:provider.stage}.yml):ARN_TABLA_PERSONAS}
    TABLA_RUT_PERSONAS: ${file(${self:provider.stage}.yml):TABLA_RUT_PERSONAS}
    REGION_NAME_BY_STAGE: ${self:provider.region}
    URL_AUTH: ${file(${self:provider.stage}.yml):URL_AUTH}
    CLIENT_ID: ${file(${self:provider.stage}.yml):CLIENT_ID}
    CLIENT_SECRET: ${file(${self:provider.stage}.yml):CLIENT_SECRET}
    AUDIENCE: ${file(${self:provider.stage}.yml):AUDIENCE}
  iam:
    role:
      statements: ${file(.cloudformation/iam/iam_policies.yml)}
functions:
  ${file(.cloudformation/resources/lambda/functions.yml)}
resources:
  #- ${file(.cloudformation/resources/resources.yml)}